name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux-mips:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        arch:
          - id: mips
            pkg: g++-mips-linux-gnu
          - id: mipsel
            pkg: g++-mipsel-linux-gnu
          - id: mips64
            pkg: g++-mips64-linux-gnuabi64
          - id: mips64el
            pkg: g++-mips64el-linux-gnuabi64
      fail-fast: false
    steps:
      - name: Initialize credentials
        run: |
          (
            echo "[default]"
            echo "access_key = ${{ secrets.S3_ACCESS_KEY }}"
            echo "secret_key = ${{ secrets.S3_SECRET_KEY }}"
          ) > ~/.s3cfg
          (
            echo "defaults:"
            echo "    domain: frida.re"
            echo "    email: ${{ secrets.CF_EMAIL }}"
            echo "    token: ${{ secrets.CF_TOKEN }}"
          ) > ~/.cfcli.yml
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ${{ matrix.arch.pkg }}
          pip3 install \
            agithub \
            requests \
            s3cmd
          npm install -g cloudflare-cli
      - name: Roll SDK
        run: python releng/deps.py roll sdk linux-${{ matrix.arch.id }}
      - name: Build
        run: make core-linux-${{ matrix.arch.id }}
      - name: Release
        run: python releng/release.py linux-${{ matrix.arch.id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  freebsd-arm64:
    runs-on: [self-hosted, freebsd, arm64]
    steps:
      - name: Initialize credentials
        run: |
          (
            echo "[default]"
            echo "access_key = ${{ secrets.S3_ACCESS_KEY }}"
            echo "secret_key = ${{ secrets.S3_SECRET_KEY }}"
          ) > ~/.s3cfg
          (
            echo "defaults:"
            echo "    domain: frida.re"
            echo "    email: ${{ secrets.CF_EMAIL }}"
            echo "    token: ${{ secrets.CF_TOKEN }}"
          ) > ~/.cfcli.yml
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Roll toolchain
        run: releng/deps.py roll toolchain freebsd-arm64 --activate
      - name: Roll SDK
        run: releng/deps.py roll sdk freebsd-arm64
      - name: Build Gum
        run: make gum
      - name: Test Gum
        run: make check-gum
      - name: Build Core
        run: make core
      - name: Test Core
        run: make check-core
      - name: Build Python Bindings
        run: make python
      - name: Test Python Bindings
        run: make check-python
      - name: Build Node.js Bindings
        run: make node
      - name: Test Node.js Bindings
        run: make check-node
      - name: Release
        run: releng/release.py freebsd-arm64
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  qnx:
    runs-on: ubuntu-latest
    container: fridadotre/qnx:latest
    steps:
      - name: Initialize credentials
        run: |
          (
            echo "[default]"
            echo "access_key = ${{ secrets.S3_ACCESS_KEY }}"
            echo "secret_key = ${{ secrets.S3_SECRET_KEY }}"
          ) > ~/.s3cfg
          (
            echo "defaults:"
            echo "    domain: frida.re"
            echo "    email: ${{ secrets.CF_EMAIL }}"
            echo "    token: ${{ secrets.CF_TOKEN }}"
          ) > ~/.cfcli.yml
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Roll SDK
        run: releng/deps.py roll sdk qnx-armeabi
      - name: Build
        run: make core-qnx-armeabi
      - name: Test Gum
        run: |
          tar -C build/tmp_thin-qnx-armeabi/frida-gum/tests -cf /tmp/runner.tar gum-tests data/
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/gum-tests
      - name: Test Core
        run: |
          mkdir -p /tmp/pkg
          cd build/tmp_thin-qnx-armeabi/frida-core
          cp -a tests/frida-tests tests/labrats/ lib/agent/frida-agent.so /tmp/pkg
          tar -C /tmp/pkg -cf /tmp/runner.tar .
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/frida-tests
      - name: Release
        run: releng/release.py qnx
        env:
          GITHUB_TOKEN: ${{ github.token }}
