name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ANDROID_NDK_VERSION: r25b

jobs:
  toolchain-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-windows-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll toolchain
        run: python releng\deps.py roll toolchain windows-x86

  sdk-windows:
    runs-on: windows-latest
    needs: toolchain-windows
    strategy:
      matrix:
        arch: [x86, x86_64]
        config: [release, debug]
      fail-fast: false
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-windows-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll SDK
        run: python releng\deps.py roll sdk windows-${{ matrix.arch }}-${{ matrix.config }} --activate

  toolchain-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll toolchain
        run: releng/deps.py roll toolchain macos-${{ matrix.arch }}

  sdk-macos:
    runs-on: macos-latest
    needs: toolchain-macos
    strategy:
      matrix:
        arch: [x86_64, arm64, arm64e]
      fail-fast: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll SDK
        run: releng/deps.py roll sdk macos-${{ matrix.arch }} --activate

  sdk-ios:
    runs-on: macos-11
    needs: toolchain-macos
    strategy:
      matrix:
        arch: [x86_64, arm64, arm64e, arm64eoabi]
      fail-fast: false
    env:
      XCODE11: /Applications/Xcode_11.7.app
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-macos-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll SDK
        run: releng/deps.py roll sdk ios-${{ matrix.arch }} --activate

  toolchain-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86, x86_64, armhf, arm64]
      fail-fast: false
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll toolchain
        run: releng/deps.py roll toolchain linux-${{ matrix.arch }}

  sdk-linux:
    runs-on: ubuntu-latest
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86, x86_64, armhf, arm64, mips, mipsel, mips64, mips64el]
      fail-fast: false
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Configure qemu-user
        if: ${{ !startsWith(matrix.arch, 'x86') }}
        run: echo "FRIDA_QEMU_SYSROOT=/opt/x-tools/$XTOOLS_HOST/$XTOOLS_HOST/sysroot" >> $GITHUB_ENV
      - name: Roll SDK
        run: releng/deps.py roll sdk linux-${{ matrix.arch }} --activate

  sdk-android-32:
    runs-on: ubuntu-latest
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86, arm]
      fail-fast: false
    container: ghcr.io/frida/x-tools-linux-x86:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Install dependencies soon to be added to Docker image
        run: |
          apt-get update
          apt-get install -y gperf unzip
      - name: Set up NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}
          add-to-path: false
      - name: Roll SDK
        run: |
          export \
              CC_FOR_BUILD=$CC \
              CXX_FOR_BUILD=$CXX \
              AS_FOR_BUILD=$AS \
              LD_FOR_BUILD=$LD \
              AR_FOR_BUILD=$AR \
              NM_FOR_BUILD=$NM \
              RANLIB_FOR_BUILD=$RANLIB \
              STRIP_FOR_BUILD=$STRIP \
              READELF_FOR_BUILD=$READELF \
              OBJCOPY_FOR_BUILD=$OBJCOPY \
              OBJDUMP_FOR_BUILD=$OBJDUMP
          unset CC CXX AS LD AR NM RANLIB STRIP READELF OBJCOPY OBJDUMP
          releng/deps.py roll sdk android-${{ matrix.arch }} --activate
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          FRIDA_BUILD_ARCH: x86

  sdk-android-64:
    runs-on: ubuntu-latest
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    container: ghcr.io/frida/x-tools-linux-x86_64:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Install dependencies soon to be added to Docker image
        run: |
          apt-get update
          apt-get install -y gperf unzip
      - name: Set up NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}
          add-to-path: false
      - name: Roll SDK
        run: |
          export \
              CC_FOR_BUILD=$CC \
              CXX_FOR_BUILD=$CXX \
              AS_FOR_BUILD=$AS \
              LD_FOR_BUILD=$LD \
              AR_FOR_BUILD=$AR \
              NM_FOR_BUILD=$NM \
              RANLIB_FOR_BUILD=$RANLIB \
              STRIP_FOR_BUILD=$STRIP \
              READELF_FOR_BUILD=$READELF \
              OBJCOPY_FOR_BUILD=$OBJCOPY \
              OBJDUMP_FOR_BUILD=$OBJDUMP
          unset CC CXX AS LD AR NM RANLIB STRIP READELF OBJCOPY OBJDUMP
          releng/deps.py roll sdk android-${{ matrix.arch }} --activate
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}

  frida-freebsd-arm64:
    runs-on: [self-hosted, freebsd, arm64]
    steps:
      - name: Initialize credentials
        run: |
          mkdir ~/.aws
          (
            echo "[default]"
            echo "aws_access_key_id = ${{ secrets.S3_ACCESS_KEY }}"
            echo "aws_secret_access_key = ${{ secrets.S3_SECRET_KEY }}"
          ) > ~/.aws/credentials
          (
            echo "defaults:"
            echo "    domain: frida.re"
            echo "    email: ${{ secrets.CF_EMAIL }}"
            echo "    token: ${{ secrets.CF_TOKEN }}"
          ) > ~/.cfcli.yml
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Checkout monorepo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Roll toolchain
        run: releng/deps.py roll toolchain freebsd-arm64 --activate
      - name: Roll SDK
        run: releng/deps.py roll sdk freebsd-arm64
      - name: Build Gum
        run: make gum
      - name: Test Gum
        run: make check-gum
      - name: Build Core
        run: make core
      - name: Test Core
        run: make check-core
      - name: Build Python Bindings
        run: make python
      - name: Test Python Bindings
        run: make check-python
      - name: Build Node.js Bindings
        run: make node
      - name: Test Node.js Bindings
        run: make check-node
      - name: Release
        run: releng/release.py freebsd-arm64
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  frida-qnx:
    runs-on: ubuntu-latest
    needs: sdk-linux
    container: ghcr.io/frida/qnx-tools:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up environment
        uses: ./.github/actions/setup-linux-env
        with:
           aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
           cloudflare-email: ${{ secrets.CF_EMAIL }}
           cloudflare-token: ${{ secrets.CF_TOKEN }}
      - name: Roll SDK
        run: releng/deps.py roll sdk qnx-armeabi
      - name: Build
        run: make core-qnx-armeabi
      - name: Test Gum
        run: |
          tar -C build/tmp_thin-qnx-armeabi/frida-gum/tests -cf /tmp/runner.tar gum-tests data/
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/gum-tests
      - name: Test Core
        run: |
          mkdir -p /tmp/pkg
          cd build/tmp_thin-qnx-armeabi/frida-core
          cp -a tests/frida-tests tests/labrats/ lib/agent/frida-agent.so /tmp/pkg
          tar -C /tmp/pkg -cf /tmp/runner.tar .
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/frida-tests
        continue-on-error: true
      - name: Release
        run: releng/release.py qnx
        env:
          GITHUB_TOKEN: ${{ github.token }}
